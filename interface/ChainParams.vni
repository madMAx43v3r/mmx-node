package mmx;

class ChainParams {
	
	uint port;
	int  decimals = 6;
	uint min_ksize = 29;
	uint max_ksize = 32;
	uint plot_filter = 4;					// log2
	uint post_filter = 10;					// log2
	
	uint commit_delay = 18;					// for writing to disk (should be less than challenge_interval - challenge_delay)
	uint infuse_delay = 6;					// for primary VDF infusion
	uint challenge_delay = 9;				// blocks until new challange is active
	uint challenge_interval = 48;			// challenge (and difficulty) is for next N blocks
	uint max_diff_adjust = 10;				// per block (1/2^x)
	uint max_vdf_count = 100;				// chain will halt if no proof is found within this time
	
	uint avg_proof_count = 3;
	uint max_proof_count = 50;
	uint max_validators = 11;
	
	ulong min_reward = 200000;
	ulong vdf_reward = 500000;				// per vdf_reward_interval
	uint  vdf_reward_interval = 50;
	uint  vdf_segment_size = 50000;
	
	uint reward_adjust_div = 100;			// relative adjustment per reward_adjust_interval
	uint reward_adjust_tick = 10000;		// minimum absolute adjustment
	uint reward_adjust_interval = 8640;		// [blocks]
	uint target_mmx_gold_price = 2000;		// [MMX / ounce]
	
	ulong time_diff_divider = 1000;			// fixed-point precision
	ulong time_diff_constant = 1000000;
	ulong space_diff_constant = 100000000;
	
	ulong initial_time_diff = 50;
	ulong initial_space_diff = 10;
	ulong initial_time_stamp = 0;			// genesis time stamp [ms]
	
	ulong min_txfee = 100;					// per tx
	ulong min_txfee_io = 100;				// per input / output
	ulong min_txfee_sign = 1000;			// per solution
	ulong min_txfee_memo = 50;				// per memo
	ulong min_txfee_exec = 10000;			// per operation
	ulong min_txfee_deploy = 100000;		// per contract
	ulong min_txfee_depend = 50000;			// per dependency
	ulong min_txfee_byte = 10;				// per byte of data
	ulong min_txfee_read = 1000;			// per lookup
	ulong min_txfee_read_kbyte = 1000;		// per 1000 bytes of data
	
	ulong max_block_size = 10000000;		// max static size
	ulong max_block_cost = 100000000;		// includes dynamic cost
	ulong max_tx_cost = 1000000;
	
	uint max_rcall_depth = 3;				// max recursion for remote calls
	uint max_rcall_width = 10;				// max total dependencies
	
	vector<uint> min_fee_ratio;				// for dynamic block size
	
	long block_interval_ms = 10000;			// [ms]
	
	string network;
	
	addr_t nft_binary;
	addr_t swap_binary;
	addr_t offer_binary;
	addr_t token_binary;
	addr_t plot_nft_binary;
	addr_t escrow_binary;
	addr_t time_lock_binary;
	addr_t relay_binary;
	
	ulong fixed_project_reward = 50000;
	uint_fraction_t project_ratio;
	
	uint reward_activation = 50000;
	uint transaction_activation = 100000;
	
	uint hardfork1_height = 1000000;		// VDF height
	uint hardfork2_height = 2000000;		// block height
	
	
	double get_block_time() const;			// [sec]
	
}
